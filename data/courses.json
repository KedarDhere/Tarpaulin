[
  {
    "courseId": 1,
    "title": "ALGORITHMS: DESIGN, ANALYSIS, AND IMPLEMENTATION",
    "instructor": "L. Huang",
    "subCode": "CS514",
    "description": "Explores sorting and selection algorithms including divide-and-conquer, quicksort/quick select, merge sort, binary search trees, memorization, heaps and heapsort, priority queues, hashing, hashed heaps; asymptotic complexity analysis including the Master equation, tree method, amortization; Dynamic Programming on sequences, graphs, trees, and intervals; Graph algorithms including breadth-first search, depth-first search, topological sort, shortest path, minimum spanning tree, network flow. NP-hard and NP-Complete problems."
  },
  {
    "courseId": 2,
    "title": "DATABASE MANAGEMENT SYSTEMS",
    "instructor": "Arash Termehchyg",
    "subCode": "CS540",
    "description": "Purpose of database systems, levels of data representation. Entity-relationship model. Relational systems: data definition, data manipulation, query language (SQL), relational calculus and algebra, data dependencies and normal forms. DBTG network model. Query optimization, recovery, concurrency control."
  },
  {
    "courseId": 3,
    "title": "COMPUTER ARCHITECTURE",
    "instructor": "L. Chen",
    "subCode": "CS572",
    "description": "Computer architecture using processors, memories, and I/O devices as building blocks. Issues involved in the design of instruction set architecture, processor, pipelining and memory organization. Design philosophies and trade-offs involved in Reduced Instruction Set Computer (RISC) architectures."
  },
  {
    "courseId": 4,
    "title": "INTRODUCTION TO PARALLEL PROGRAMMING",
    "instructor": "M. Bailey",
    "subCode": "CS575",
    "description": "Theoretical and practical survey of parallel programming, including a discussion of parallel architecture, parallel programming paradigms, and parallel algorithms. Programming one or more parallel computers in a higher-level parallel language."
  },
  {
    "courseId": 5,
    "title": "SOFTWARE ENGINEERING METHODS",
    "instructor": "Will Braynen",
    "subCode": "CS561",
    "description": "Master software engineering methods and supporting tools in the context of agile processes. Teams will engage in all aspects of software development including design, testing, implementation, deployment and maintenance. 3 hours of lecture per week plus one-hour independent lab per week."
  },
  {
    "courseId": 6,
    "title": "HUMAN-COMPUTER INTERACTION",
    "instructor": "M. Kahng",
    "subCode": "CS65",
    "description": "Basic principles of Human-Computer Interaction (HCI) for the design and evaluation of software systems. Includes research methods for studying human-machine interactions and user interfaces, design strategies, software evaluation methods, and related guidelines and standards."
  },
  {
    "courseId": 7,
    "title": "SCIENTIFIC VISUALIZATION",
    "instructor": "E. Zhang",
    "subCode": "CS553",
    "description": "Applies 3D computer graphics methods to visually understand scientific and engineering data. Methods include hyperbolic projections; mapping scalar values to color spaces; data visualization using range sliders; scalar visualization (point clouds, cutting planes, contour plots, isosurfaces); vector visualization (arrow clouds, particle advection, streamlines); terrain visualization; Delauney triangulation; and volume visualization."
  },
  {
    "courseId": 8,
    "title": "ERROR-CORRECTING CODES",
    "instructor": "b. Bose",
    "subCode": "CS527",
    "description": "Hamming codes, linear codes, cyclic codes, BCH and Reed-Solomon codes. Introduction to Galois fields. Encoding and decoding algorithms. Burst error correcting codes, asymmetric and unidirectional codes. Applications of codes for computer systems."
  }

]

